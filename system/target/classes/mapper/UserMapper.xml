<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinfeeloo.inventory.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.sinfeeloo.inventory.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Apr 25 17:12:01 CST 2018.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="roleId" jdbcType="INTEGER" property="roleid"/>
        <result column="roleName" jdbcType="VARCHAR" property="rolename"/>
        <result column="employeeId" jdbcType="INTEGER" property="employeeid"/>
        <result column="updater" jdbcType="VARCHAR" property="updater"/>
        <result column="updatime" jdbcType="TIMESTAMP" property="updatime"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="isLocked" jdbcType="INTEGER" property="islocked"/>
        <result column="lockTime" jdbcType="TIMESTAMP" property="locktime"/>
        <result column="employeeName" jdbcType="VARCHAR" property="employeeName"/>
        <result column="employeeCode" jdbcType="VARCHAR" property="employeeCode"/>
        <result column="updatimeStr" jdbcType="VARCHAR" property="updatimeStr"/>
    </resultMap>

    <!--通过账户查询用户-->
    <select id="selectByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id, account, password, roleId, roleName, employeeId, updater, updatime, state,
        isLocked, lockTime
        from lz_sys_user
        where account = #{account,jdbcType=VARCHAR}
  </select>

    <!--添加用户-->
    <insert id="insert" parameterType="com.sinfeeloo.inventory.entity.User">
      insert into lz_sys_user (id, account, password,
      roleId, roleName, employeeId,
      updater, updatime, state,
      isLocked, lockTime)
      values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{employeeid,jdbcType=INTEGER},
      #{updater,jdbcType=VARCHAR}, now(), #{state,jdbcType=INTEGER},
      #{islocked,jdbcType=INTEGER}, #{locktime,jdbcType=TIMESTAMP})
  </insert>

    <!--通过条件查询用户列表-->
    <select id="selectUserListByPage" resultMap="BaseResultMap">
        SELECT
        u.id,
        u.account,
        u.roleId,
        u.roleName,
        u.employeeId,
        e.`name` AS employeeName,
        e.`code` AS employeeCode,
        u.updater,
        u.updatime,
        DATE_FORMAT(u.updatime, '%Y-%m-%d %H:%i:%s') as updatimeStr,
        u.isLocked,
        u.lockTime
        FROM
        lz_sys_user u
        LEFT JOIN
        lz_base_employee e ON u.employeeId = e.id
        WHERE
        u.state = 1
        <if test="account != null and account!=''">
            AND u.account LIKE CONCAT ('%',#{account},'%' )
        </if>
        <if test="roleId != null and roleId!=''">
            AND u.roleId = #{roleId}
        </if>
        <if test="isLocked != null and isLocked!=''">
            AND u.isLocked = #{isLocked}
        </if>
        ORDER BY ${sortCode} ${sortRole}
        limit #{limit} offset #{offset}
    </select>
    <!--通过条件查询用户列表数量-->
    <select id="selectUserCount" resultType="long">
        SELECT
        COUNT(1)
        FROM
        lz_sys_user
        WHERE
        state = 1
        <if test="account != null and account!=''">
            AND account LIKE CONCAT ('%',#{account},'%' )
        </if>
        <if test="roleId != null and roleId!=''">
            AND roleId = #{roleId}
        </if>
        <if test="isLocked != null and isLocked!=''">
            AND isLocked = #{isLocked}
        </if>
    </select>

    <!--通过id找到user对象-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, account, password, roleId, roleName, employeeId, updater, updatime, state,
        isLocked, lockTime
        from lz_sys_user
        where id = #{id,jdbcType=INTEGER}
    </select>


    <!--修改-->
    <update id="updateByPrimaryKey" parameterType="com.sinfeeloo.inventory.entity.User">
        update lz_sys_user
        set account = #{account,jdbcType=VARCHAR},
        roleId = #{roleid,jdbcType=INTEGER},
        roleName = #{rolename,jdbcType=VARCHAR},
        employeeId = #{employeeid,jdbcType=INTEGER},
        updater = #{updater,jdbcType=VARCHAR},
        updatime = now()
        where id = #{id,jdbcType=INTEGER} AND state = 1
    </update>

    <!--删除-->
    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        update lz_sys_user
        set
        state = 0
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--锁定-->
    <update id="lockByPrimaryKey">
        update lz_sys_user
        set
        isLocked = #{isLocked,jdbcType=INTEGER},
        updatime = now(),
        lockTime = now()
        where id = #{id,jdbcType=INTEGER} AND state = 1
    </update>

    <!--修改密码-->
    <update id="updatePassword">
        update lz_sys_user
        set
        password = #{newPwd,jdbcType=VARCHAR},
        updatime = now()
        where id = #{id,jdbcType=INTEGER} AND state = 1
    </update>

</mapper>